

drop table entity_mainland_general_registration_info_details;
 CREATE TABLE `entity_mainland_general_registration_info_details` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',
  `tyc_unique_entity_id` varchar(50) COMMENT '实体id',
  `entity_name_valid` varchar(255) COMMENT '实体名称',
  `entity_type_id` tinyint(4) not null default '1' COMMENT '实体类型',
  `register_capital_amount` bigint COMMENT '注册资本数额 精确到分',
  `register_capital_currency` varchar(255) COMMENT '注册资本币种',
  `actual_capital_amount` bigint COMMENT '实缴资本数额 精确到分',
  `actual_capital_currency` varchar(255) COMMENT '实缴资本币种',
  `entity_registration_status` varchar(255) COMMENT '登记经营状态',
  `register_number` varchar(255) COMMENT '工商注册号',
  `unified_social_credit_code` varchar(255) COMMENT '统一社会信用代码',
  `entity_property` int COMMENT '实体性质',
  `entity_property_original` varchar(255) COMMENT '实体性质(原始)',
  `entity_register_address` varchar(255) COMMENT '登记注册地址',
  `registration_date` date  COMMENT '成立日期',
  `business_term_start_date` date  COMMENT '营业期限(起始)',
  `business_term_end_date` date  COMMENT '营业期限(结束)',
  `business_term_is_permanent` tinyint(4) COMMENT '营业期限是否长期',
  `business_registration_scope` varchar(5000) COMMENT '注册经营范围',
  `registration_institute` varchar(255) COMMENT '登记机关',
  `approval_date` date  COMMENT '核准日期',
  `organization_code` varchar(255) COMMENT '组织机构代码',
  `taxpayer_identification_code` varchar(255) COMMENT '纳税人识别号',
  `delete_status` tinyint(4) NOT NULL DEFAULT '0' COMMENT '删除状态',
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_company` (`tyc_unique_entity_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 comment '基础工商';


drop table entity_mainland_public_institution_registration_info_details;
CREATE TABLE `entity_mainland_public_institution_registration_info_details` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',
  `tyc_unique_entity_id` varchar(50) COMMENT '实体id',
  `entity_name_valid` varchar(255) COMMENT '实体名称',
  `entity_type_id` tinyint(4) not null default '1' COMMENT '实体类型',
  `register_capital_amount` bigint COMMENT '注册资本数额 精确到分',
  `register_capital_currency` varchar(255) COMMENT '注册资本币种',
  `entity_registration_status` varchar(255) COMMENT '登记经营状态',
  `register_unit_public_institution` varchar(255) COMMENT '举办单位名称',
  `public_institution_funding_source` varchar(255) COMMENT '经费来源',
  `registration_institute` varchar(255) COMMENT '登记机关',
  `original_certificate_number_public_institution` varchar(255) COMMENT '原证书号',
  `unified_social_credit_code` varchar(255) COMMENT '统一社会信用代码',
  `business_term_start_date` date  COMMENT '营业期限(起始)',
  `business_term_end_date` date  COMMENT '营业期限(结束)',
  `business_term_is_permanent` tinyint(4) COMMENT '营业期限是否长期',
  `entity_register_address` varchar(255) COMMENT '登记注册地址',
  `business_registration_scope` varchar(5000) COMMENT '经营范围',
  `entity_property` int COMMENT '实体性质',
  `is_national_public_institution` tinyint(4) COMMENT '是否中央级事业单位',
  `organization_code` varchar(255) COMMENT '组织机构代码',
  `taxpayer_identification_code` varchar(255) COMMENT '纳税人识别号',
  `delete_status` tinyint(4) NOT NULL DEFAULT '0' COMMENT '删除状态',
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`),
  KEY `idx_company` (`tyc_unique_entity_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 comment '事业单位';

################################################ hive ###################################################################

drop table ads.ads_entity_operation_development_entity_mainland_general_registration_info_details;
 CREATE TABLE `ads.ads_entity_operation_development_entity_mainland_general_registration_info_details` (
  `id` bigint COMMENT '主键',
  `tyc_unique_entity_id` string COMMENT '实体ID',
  `entity_name_valid` string COMMENT '实体名称',
  `entity_type_id` int COMMENT '实体类型 1-企业 2-人 3-非人非公司',
  `register_capital_amount` bigint COMMENT '注册资本数额 精确到分',
  `register_capital_currency` string COMMENT '注册资本币种',
  `actual_capital_amount` bigint COMMENT '实缴资本数额 精确到分',
  `actual_capital_currency` string COMMENT '实缴资本币种',
  `entity_registration_status` string COMMENT '登记经营状态',
  `register_number` string COMMENT '工商注册号',
  `unified_social_credit_code` string COMMENT '统一社会信用代码',
  `entity_property` int COMMENT '实体性质',
  `entity_property_original` string COMMENT '实体性质(原始)',
  `entity_register_address` string COMMENT '登记注册地址',
  `registration_date` date COMMENT '成立日期',
  `business_term_start_date` date COMMENT '营业期限(起始)',
  `business_term_end_date` date COMMENT '营业期限(结束)',
  `business_term_is_permanent` int COMMENT '营业期限是否长期',
  `business_registration_scope` string COMMENT '注册经营范围',
  `registration_institute` string COMMENT '登记机关',
  `approval_date` date COMMENT '核准日期',
  `organization_code` string COMMENT '组织机构代码',
  `taxpayer_identification_code` string COMMENT '纳税人识别号',
  `delete_status` int COMMENT '删除状态',
  `create_time` timestamp COMMENT '创建时间',
  `update_time` timestamp COMMENT '更新时间'
) partitioned by (pt string);


drop table ads.ads_entity_operation_development_entity_mainland_public_institution_registration_info_details;
CREATE TABLE `ads.ads_entity_operation_development_entity_mainland_public_institution_registration_info_details` (
  `id` bigint COMMENT '主键',
  `tyc_unique_entity_id` string COMMENT '实体ID',
  `entity_name_valid` string COMMENT '实体名称',
  `entity_type_id` int COMMENT '实体类型 1-企业 2-人 3-非人非公司',
  `register_capital_amount` bigint COMMENT '注册资本数额 精确到分',
  `register_capital_currency` string COMMENT '注册资本币种',
  `entity_registration_status` string COMMENT '登记经营状态',
  `register_unit_public_institution` string COMMENT '事业单位举办单位名称',
  `public_institution_funding_source` string COMMENT '事业单位经费来源',
  `registration_institute` string COMMENT '登记机关',
  `original_certificate_number_public_institution` string COMMENT '事业单位原证书号',
  `unified_social_credit_code` string COMMENT '统一社会信用代码',
  `business_term_start_date` date  COMMENT '营业期限(起始)',
  `business_term_end_date` date  COMMENT '营业期限(结束)',
  `business_term_is_permanent` int COMMENT '营业期限是否长期',
  `entity_register_address` string COMMENT '登记注册地址',
  `business_registration_scope` string COMMENT '注册经营范围',
  `entity_property` int COMMENT '实体性质',
  `is_national_public_institution` int COMMENT '是否中央级事业单位',
  `organization_code` string COMMENT '组织机构代码',
  `taxpayer_identification_code` string COMMENT '纳税人识别号',
  `delete_status` int COMMENT '删除状态',
  `create_time` timestamp COMMENT '创建时间',
  `update_time` timestamp COMMENT '更新时间'
) partitioned by (pt string);



<   &lt;
<=  &lt;=
>   &gt;
>=  &gt;=



JAVA_OPTS="-Dsun.security.krb5.debug=true -Djavax.security.auth.useSubjectCredsOnly=false -Xss4m -Xmx8192m
-XX:+UseMembar -XX:SurvivorRatio=8 -XX:MaxTenuringThreshold=7 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSClassUnloadingEnabled -XX:-CMSParallelRemarkEnabled -XX:CMSInitiatingOccupancyFraction=80 -XX:SoftRefLRUPolicyMSPerMB=0


curl --location --request POST 'http://10.99.205.87:8990/flink/cancelMonitor' \
--header 'Content-Type: application/json' \
--data '{
    "sshUserName": "liang",
    "sshPassWord": "Moka20190520",
    "yarnName": "MultiNodeJob",
    "isMonitored": 0
}'

kafka-topics.sh --describe --bootstrap-server 10.99.202.90:9092 -topic e1d4c.proto.prism_shareholder_path.investment_relation

kafka-configs.sh --alter --bootstrap-server 10.99.202.90:9092 --entity-type topics --entity-name e1d4c.proto.prism_shareholder_path.investment_relation --add-config retention.ms=432000000

#!/bin/bash
expect << EOF
  set timeout -1

  spawn ssh -l hive 10.99.194.128
  expect "password:*"
        
  send "hive_tyc\n"
  expect "$ *"
  
  send "cd liang/px-check/\n"
  expect "$ *"
  
  send "./spark-submit.sh\n"
  expect "$ *"

  send "tail -f log\n"
  expect "state: RUNNING*"
EOF
echo 'SUCCESS!'


AQS是什么:
1.Abstract队列式同步器,是java构建锁和同步的一个抽象类
2.ReentrantLock、ReentrantReadWriteLock、CountDownLatch、Semaphore里面的Sync内部类,都是AQS的实现

AQS核心成员:
1. 被volatile修饰的state, 保证可见性
2. 由内部类Node组成的双向链表, 每个Node包含prev,next,thread,waitStatus, waitStatus代表该线程释放资源后的责任

AQS核心思想:
1. `state 不同的值` 代表 `lock 不同的状态`
2. 通过对 state 进行CAS原子替换, 实现锁状态的切换
3. 通过acquire()请求锁, 请求失败后, 把自己包装成Node, CAS到CLH队列的队尾, 调用LockSupport.park()进入WAITTING状态
4. 通过release()释放锁, 会将CLH队列的第一个waitStatus!=CANCELLED的线程unpark

ReentrantLock:
0代表锁没有被持有, 1代表锁被持有, 大于1代表锁被重入
lock()对应acquice(), unlock()对应release()

ReentrantReadWriteLock:
0代表锁没有被持有, 高16位代表读锁及其重入次数,低16位代表写锁及其重入次数
lock()对应acquice(), unlock()对应release()

CountDownLatch:
N代表还有N个线程没有释放锁, 0代表锁被释放, CLH队列的主线程可以执行
await()对应acquice(), countDown()对应release()

Semaphore:
N代表当前有N个permit可被抢占
acquice()对应acquice(), release()对应release()



