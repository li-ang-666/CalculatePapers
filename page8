

-- 实际控制人
ads.ads_bdp_equity_entity_controller_details
-- 收益所有人
ads.ads_bdp_equity_entity_beneficiary_details
-- 股东标签
ads.ads_bdp_equity_shareholder_identity_type_details
-- 年报股东股权变更
ads.ads_entity_operation_development_entity_annual_report_shareholder_equity_change_details
-- 年报股东出资信息
ads.ads_entity_operation_development_entity_annual_report_shareholder_equity_details
-- 年报对外投资
ads.ads_entity_operation_development_entity_annual_report_investment_details
-- 年报网上运营
ads.ads_entity_operation_development_entity_annual_report_ebusiness_details

spark.sql("insert overwrite table ads.ads_entity_operation_development_entity_mainland_general_registration_info_details partition(pt = '20230908') select /*+ REPARTITION(360) */ * from t_company");
spark.sql("insert overwrite table ads.ads_entity_operation_development_entity_mainland_public_institution_registration_info_details partition(pt = '20230908') select /*+ REPARTITION(180) */ * from t_gov");


curl --location --request POST 'http://10.99.205.87:8990/flink/cancelMonitor' \
--header 'Content-Type: application/json' \
--data '{
    "sshUserName": "liang",
    "sshPassWord": "Moka20190520",
    "yarnName": "AnnualReportJob",
    "isMonitored": 0
}'


insert into entity_enforcement_object_evaluate_institution_candidate_details
select
  `id`,
  `tyc_unique_entity_id_subject_to_enforcement`,
  `entity_name_valid_subject_to_enforcement`,
  `entity_type_id_subject_to_enforcement`,
  `tyc_unique_entity_id_candidate_evaluation_institution`,
  `entity_name_valid_selected_evaluation_institution`,
  `entity_type_id_candidate_evaluation_institution`,
  `enforcement_case_number`,
  `enforcement_case_number_original`,
  `enforcement_case_type`,
  `enforcement_object_evaluation_court_name`,
  `enforcement_object_asset_type`,
  `enforcement_object_name`,
  `lottery_date_to_candidate_evaluation_institution`,
  `is_evaluation_institution_candidate`,
  `delete_status`,
  `create_time`,
  `update_time`
from entity_enforcement_object_evaluate_institution_candidate_middle
where enforcement_case_number in (
  select distinct enforcement_case_number
  from entity_enforcement_object_evaluate_institution_candidate_middle
  group by enforcement_case_number
  having group_concat(entity_type_id_subject_to_enforcement) like '%1%' and sum(is_state_organs) = 0
)
